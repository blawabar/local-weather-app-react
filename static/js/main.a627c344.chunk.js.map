{"version":3,"sources":["data/constants.js","utils/geolocation.js","utils/weather.js","data/fetch.js","data/actions.js","data/reducer.js","data/context.js","components/Calendar/Calendar.js","components/Description/Description.js","components/Details/Details.js","components/ErrorScreen/ErrorScreen.js","components/Footer/Footer.js","components/LoadingScreen/LoadingScreen.js","components/Location/Location.js","components/Temperature/Temperature.js","components/UnitsSwitch/UnitsSwitch.js","components/WeatherBackground/WeatherBackground.js","components/WeatherEngine/WeatherEngine.js","hooks/useHeartBeat.js","components/WeatherInfo/WeatherInfo.js","components/WeatherScreen/WeatherScreen.js","components/ErrorBoundary/ErrorBoundary.js","App.js","index.js"],"names":["WEATHER_ICON_TO_CLASS_MAP","Object","freeze","UNITS_TYPE","METRIC","IMPERIAL","ACTION_TYPES","GET_WEATHER_DATA_REQUEST","GET_WEATHER_DATA_SUCCESS","GET_WEATHER_DATA_ERROR","GEOLOCATION_ERROR","SWITCH_UNITS_TYPE","trimCoord","coord","parseFloat","toFixed","trimNumericValue","value","normalizeWeatherData","weatherData","Error","weather","description","icon","main","temp","pressure","humidity","speed","wind","country","sys","name","location","text","details","windSpeed","convertWeatherDataValues","unitsType","console","log","convertedTemperature","convertedWindSpeed","fetchWeatherData","dispatch","a","lat","lon","URL","type","fetch","result","ok","json","data","payload","cod","message","getWeatherData","state","onGetCoords","onError","position","coords","latitude","longitude","extractCoords","error","msg","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","UNKNOWN_ERROR","handleGeolocationError","navigator","geolocation","getCurrentPosition","alert","switchUnitsType","INITIAL_STATE","isLoading","success","weatherReducer","action","WeatherContext","createContext","Provider","WeatherProvider","children","useReducer","actions","Calendar","currentDate","useRef","Date","toLocaleDateString","getLocalTime","useCallback","toLocaleTimeString","useState","currentTime","setCurrentTime","useEffect","interval","setInterval","clearInterval","className","current","Description","descData","Details","detailsData","detailsStructure","category","title","units","map","item","index","key","ErrorScreen","Footer","creditsInfo","linkRef","linkText","href","target","rel","LoadingScreen","Location","locationData","Temperature","tempValue","modifier","UnitsSwitch","onUnitsChange","coverPrefix","unitInfoPrefix","coverClassName","toLowerCase","switchValues","unitType","typeName","onClick","WeatherBackground","useContext","classType","WeatherEngine","intervalValue","setHeartBeatValue","timeInterval","useMemo","intervalId","useHeartBeat","content","toString","WeatherInfo","WeatherScreen","ErrorBoundary","props","errorInfo","this","setState","componentStack","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a627c344.chunk.js","sourcesContent":["export const WEATHER_ICON_TO_CLASS_MAP = Object.freeze({\r\n  \"01d\": \"clear-sky-d\",\r\n  \"01n\": \"clear-sky-n\",\r\n  \"02d\": \"few-clouds-d\",\r\n  \"02n\": \"few-clouds-n\",\r\n  \"03d\": \"scattered-clouds-d\",\r\n  \"03n\": \"scattered-clouds-n\",\r\n  \"04d\": \"broken-clouds-d\",\r\n  \"04n\": \"broken-clouds-n\",\r\n  \"09d\": \"shower-rain-d\",\r\n  \"09n\": \"shower-rain-n\",\r\n  \"10d\": \"rain-d\",\r\n  \"10n\": \"rain-n\",\r\n  \"11d\": \"thunderstorm-d\",\r\n  \"11n\": \"thunderstorm-n\",\r\n  \"13d\": \"snow-d\",\r\n  \"13n\": \"snow-n\",\r\n  \"50d\": \"mist\",\r\n});\r\n\r\nconst METRIC = \"METRIC\";\r\nconst IMPERIAL = \"IMPERIAL\";\r\n\r\nexport const UNITS_TYPE = Object.freeze({\r\n  METRIC,\r\n  IMPERIAL,\r\n});\r\n\r\nexport const ACTION_TYPES = Object.freeze({\r\n  GET_WEATHER_DATA_REQUEST: \"GET_WEATHER_DATA_REQUEST\",\r\n  GET_WEATHER_DATA_SUCCESS: \"GET_WEATHER_DATA_SUCCESS\",\r\n  GET_WEATHER_DATA_ERROR: \"GET_WEATHER_DATA_ERROR\",\r\n  GEOLOCATION_ERROR: \"GEOLOCATION_ERROR\",\r\n  SWITCH_UNITS_TYPE: \"SWITCH_UNITS_TYPE\",\r\n});\r\n\r\nexport const API = \"https://api.openweathermap.org/data/2.5/weather\";\r\nexport const TOKEN = \"086370e96396a4464fe97ec16a0f7381\";\r\n","import { ACTION_TYPES } from \"data/constants\";\r\n\r\nexport const getCoords = (onGetCoords, onError) => {\r\n  if (navigator.geolocation) {\r\n    navigator.geolocation.getCurrentPosition(onGetCoords, onError);\r\n  } else {\r\n    alert(\"Geolocation is not supported by this browser.\");\r\n  }\r\n};\r\n\r\nconst trimCoord = (coord) => (coord ? parseFloat(coord.toFixed(2)) : 0.0);\r\n\r\nexport const extractCoords = (position) => {\r\n  let result = { lat: 0.0, lon: 0.0 };\r\n\r\n  if (position) {\r\n    const { latitude, longitude } = position.coords;\r\n\r\n    result = {\r\n      lat: trimCoord(latitude),\r\n      lon: trimCoord(longitude),\r\n    };\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nexport const handleGeolocationError = (error, dispatch) => {\r\n  let msg = \"An unknown Geolocation related error occurred.\";\r\n\r\n  switch (error.code) {\r\n    case error.PERMISSION_DENIED:\r\n      msg = \"User denied the request for Geolocation.\";\r\n      break;\r\n    case error.POSITION_UNAVAILABLE:\r\n      msg = \"Location information is unavailable.\";\r\n      break;\r\n    case error.TIMEOUT:\r\n      msg = \"The request to get user location timed out.\";\r\n      break;\r\n    case error.UNKNOWN_ERROR:\r\n    default:\r\n      break;\r\n  }\r\n\r\n  dispatch({ type: ACTION_TYPES.GEOLOCATION_ERROR, payload: msg });\r\n};\r\n","import { UNITS_TYPE } from \"data/constants\";\r\n\r\nconst trimNumericValue = (value) => parseFloat(value.toFixed(1));\r\n\r\nexport const normalizeWeatherData = (weatherData) => {\r\n  if (!weatherData || typeof weatherData !== \"object\") {\r\n    throw new Error(\"Improper type of weather data!\");\r\n  }\r\n\r\n  const {\r\n    coord,\r\n    weather: [{ description, icon }],\r\n    main: { temp, pressure, humidity },\r\n    wind: { speed },\r\n    sys: { country },\r\n    name,\r\n  } = weatherData;\r\n\r\n  return {\r\n    coord,\r\n    location: `${name}, ${country}`,\r\n    temp: trimNumericValue(temp),\r\n    description: {\r\n      text: description,\r\n      icon,\r\n    },\r\n    details: {\r\n      windSpeed: trimNumericValue(speed),\r\n      pressure,\r\n      humidity,\r\n    },\r\n  };\r\n};\r\n\r\nexport const convertWeatherDataValues = (unitsType, weatherData) => {\r\n  console.log({ unitsType, weatherData });\r\n\r\n  const {\r\n    details: { windSpeed },\r\n    temp,\r\n  } = weatherData;\r\n\r\n  const convertedTemperature = trimNumericValue(\r\n    unitsType === UNITS_TYPE.METRIC ? ((temp - 32) * 5) / 9 : temp * 1.8 + 32.0\r\n  );\r\n\r\n  const convertedWindSpeed = trimNumericValue(\r\n    unitsType === UNITS_TYPE.METRIC ? windSpeed * 0.447 : windSpeed * 2.237\r\n  );\r\n\r\n  return {\r\n    ...weatherData,\r\n    temp: convertedTemperature,\r\n    details: { ...weatherData.details, windSpeed: convertedWindSpeed },\r\n  };\r\n};\r\n","import { ACTION_TYPES, API, TOKEN } from \"data/constants\";\r\nimport { normalizeWeatherData } from \"utils/weather\";\r\n\r\nconst {\r\n  GET_WEATHER_DATA_REQUEST,\r\n  GET_WEATHER_DATA_ERROR,\r\n  GET_WEATHER_DATA_SUCCESS,\r\n} = ACTION_TYPES;\r\n\r\nexport const fetchWeatherData = async (coord, dispatch) => {\r\n  const { lat, lon } = coord;\r\n  const URL = `${API}?lat=${lat}&lon=${lon}&units=metric&APPID=${TOKEN}`;\r\n\r\n  try {\r\n    dispatch({ type: GET_WEATHER_DATA_REQUEST });\r\n    const result = await fetch(URL);\r\n\r\n    if (result.ok) {\r\n      const data = await result.json();\r\n\r\n      dispatch({\r\n        type: GET_WEATHER_DATA_SUCCESS,\r\n        payload: normalizeWeatherData(data),\r\n      });\r\n    } else {\r\n      const { cod, message } = await result.json();\r\n      dispatch({\r\n        type: GET_WEATHER_DATA_ERROR,\r\n        payload: `Fetch error - code: ${cod}, message: ${message}`,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    dispatch({ type: GET_WEATHER_DATA_ERROR, payload: error });\r\n  }\r\n};\r\n","import { ACTION_TYPES, UNITS_TYPE } from \"data/constants\";\r\n\r\nimport {\r\n  getCoords,\r\n  extractCoords,\r\n  handleGeolocationError,\r\n} from \"utils/geolocation\";\r\n\r\nimport { fetchWeatherData } from \"data/fetch\";\r\n\r\nexport const getWeatherData = (state, dispatch) => () => {\r\n  const { weatherData } = state;\r\n\r\n  if (!weatherData) {\r\n    getCoords(\r\n      (position) => {\r\n        fetchWeatherData(extractCoords(position), dispatch);\r\n      },\r\n      (error) => handleGeolocationError(error, dispatch)\r\n    );\r\n  } else {\r\n    fetchWeatherData(weatherData.coord, dispatch);\r\n  }\r\n};\r\n\r\nexport const switchUnitsType = (state, dispatch) => () => {\r\n  dispatch({\r\n    type: ACTION_TYPES.SWITCH_UNITS_TYPE,\r\n    payload:\r\n      state.unitsType === UNITS_TYPE.METRIC\r\n        ? UNITS_TYPE.IMPERIAL\r\n        : UNITS_TYPE.METRIC,\r\n  });\r\n};\r\n","import { ACTION_TYPES, UNITS_TYPE } from \"data/constants\";\r\nimport { convertWeatherDataValues } from \"utils/weather\";\r\n\r\nexport const INITIAL_STATE = {\r\n  isLoading: false,\r\n  error: null,\r\n  success: false,\r\n  weatherData: null,\r\n  unitsType: UNITS_TYPE.METRIC,\r\n};\r\n\r\nconst {\r\n  GET_WEATHER_DATA_REQUEST,\r\n  GET_WEATHER_DATA_SUCCESS,\r\n  GET_WEATHER_DATA_ERROR,\r\n  GEOLOCATION_ERROR,\r\n  SWITCH_UNITS_TYPE,\r\n} = ACTION_TYPES;\r\n\r\nexport const weatherReducer = (state, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case GET_WEATHER_DATA_REQUEST:\r\n      return { ...state, isLoading: true };\r\n    case GET_WEATHER_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: null,\r\n        success: true,\r\n        weatherData:\r\n          state.unitsType === UNITS_TYPE.IMPERIAL\r\n            ? convertWeatherDataValues(state.unitsType, payload)\r\n            : payload,\r\n      };\r\n    case SWITCH_UNITS_TYPE:\r\n      return {\r\n        ...state,\r\n        weatherData: convertWeatherDataValues(payload, state.weatherData),\r\n        unitsType: payload,\r\n      };\r\n    case GET_WEATHER_DATA_ERROR:\r\n    case GEOLOCATION_ERROR:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: payload,\r\n        success: false,\r\n        weatherData: null,\r\n      };\r\n    default:\r\n      throw new Error(`Unknown Service State: ${type}`);\r\n  }\r\n};\r\n","import React, { createContext, useReducer } from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport { getWeatherData, switchUnitsType } from \"data/actions\";\r\nimport { INITIAL_STATE, weatherReducer } from \"data/reducer\";\r\n\r\nexport const WeatherContext = createContext({});\r\n\r\nconst { Provider } = WeatherContext;\r\n\r\nexport const WeatherProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(weatherReducer, INITIAL_STATE);\r\n\r\n  return (\r\n    <Provider\r\n      value={{\r\n        state,\r\n        actions: {\r\n          getWeatherData: getWeatherData(state, dispatch),\r\n          switchUnitsType: switchUnitsType(state, dispatch),\r\n        },\r\n      }}\r\n    >\r\n      {children}\r\n    </Provider>\r\n  );\r\n};\r\n\r\nWeatherProvider.propTypes = {\r\n  children: PropTypes.element.isRequired,\r\n};\r\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\r\n\r\nimport \"./Calendar.scss\";\r\n\r\nexport const Calendar = () => {\r\n  const currentDate = useRef(new Date().toLocaleDateString());\r\n  const getLocalTime = useCallback(() => new Date().toLocaleTimeString(), []);\r\n  const [currentTime, setCurrentTime] = useState(() => getLocalTime());\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrentTime(getLocalTime());\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"calendar\">\r\n      <span className=\"calendar__time\">{currentTime}</span>\r\n      <span className=\"calendar__date\"> - {currentDate.current}</span>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./Description.scss\";\r\n\r\nimport { WEATHER_ICON_TO_CLASS_MAP } from \"data/constants\";\r\n\r\nexport const Description = ({ descData: { icon, text } }) => {\r\n  return (\r\n    <section className=\"description\">\r\n      <p\r\n        className={`description__icon description__icon--${WEATHER_ICON_TO_CLASS_MAP[icon]}`}\r\n      ></p>\r\n      <p className=\"description__text\">{text}</p>\r\n    </section>\r\n  );\r\n};\r\n\r\nDescription.propTypes = {\r\n  descData: PropTypes.exact({\r\n    icon: PropTypes.string.isRequired,\r\n    text: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n};\r\n","import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./Details.scss\";\r\n\r\nimport { UNITS_TYPE } from \"data/constants\";\r\n\r\nexport const Details = ({\r\n  detailsData: { windSpeed, pressure, humidity },\r\n  unitsType,\r\n}) => {\r\n  const data = [\r\n    {\r\n      category: \"wind\",\r\n      title: \"Wind speed\",\r\n      value: windSpeed,\r\n      units: unitsType === UNITS_TYPE.METRIC ? \"m/s\" : \"mph\",\r\n    },\r\n    {\r\n      category: \"pressure\",\r\n      title: \"Air pressure\",\r\n      value: pressure,\r\n      units: \"hPa\",\r\n    },\r\n    {\r\n      category: \"humidity\",\r\n      title: \"Humidity\",\r\n      value: humidity,\r\n      units: \"%\",\r\n    },\r\n  ];\r\n\r\n  const detailsStructure = data.map((item, index) => {\r\n    const { category, title, value, units } = item;\r\n\r\n    return (\r\n      <div key={index} className={`details__${category}`}>\r\n        <p className=\"details__title\">{title}</p>\r\n        <p className=\"details__value\">{`${value} ${units}`}</p>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return <section className=\"details\">{detailsStructure}</section>;\r\n};\r\n\r\nDetails.propTypes = {\r\n  detailsData: PropTypes.exact({\r\n    windSpeed: PropTypes.number.isRequired,\r\n    pressure: PropTypes.number.isRequired,\r\n    humidity: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  unitsType: PropTypes.string.isRequired,\r\n};\r\n","import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./ErrorScreen.scss\";\r\n\r\nexport const ErrorScreen = ({ error }) => {\r\n  return (\r\n    <div className=\"error-screen\">\r\n      <h1 className=\"error-screen__title\">An error has occured.</h1>\r\n      <p className=\"error-screen__details\">{error}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nErrorScreen.propTypes = { error: PropTypes.string.isRequired };\r\n","import React, { useRef } from \"react\";\r\n\r\nimport \"./Footer.scss\";\r\n\r\nexport const Footer = () => {\r\n  const creditsInfo = useRef([\r\n    {\r\n      text: \"Weather API:\",\r\n      linkRef: \"http://openweathermap.org\",\r\n      linkText: \"Open Weather Map\",\r\n    },\r\n    {\r\n      text: \"Weather Font:\",\r\n      linkRef: \"https://www.behance.net/artill\",\r\n      linkText: \"Lukas Bischoff\",\r\n    },\r\n    {\r\n      text: \"Weather images:\",\r\n      linkRef: \"https://www.flickr.com/photos/archikvadrat/\",\r\n      linkText: \"Anatol C.\",\r\n    },\r\n  ]);\r\n\r\n  return (\r\n    <footer className=\"footer\">\r\n      <section className=\"footer__copyright\">\r\n        Local Weather Application (Bart Krolak, 2020)\r\n      </section>\r\n      {creditsInfo.current.map(({ text, linkRef, linkText }, index) => {\r\n        return (\r\n          <section key={index} className=\"footer__credits\">\r\n            <span className=\"footer__text\">{text}</span>\r\n            <a\r\n              className=\"footer__link\"\r\n              href={linkRef}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              {linkText}\r\n            </a>\r\n          </section>\r\n        );\r\n      })}\r\n    </footer>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./LoadingScreen.scss\";\r\n\r\nexport const LoadingScreen = ({\r\n  message = \"Loading Local Weather Data...\",\r\n}) => {\r\n  return (\r\n    <div className=\"loading-screen\">\r\n      <h1 className=\"loading-screen__title\">{message}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nLoadingScreen.propTypes = { message: PropTypes.string };\r\n","import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./Location.scss\";\r\n\r\nimport { Calendar } from \"components\";\r\n\r\nexport const Location = ({ locationData }) => {\r\n  return (\r\n    <section className=\"location\">\r\n      <div className=\"location__city\">{locationData}</div>\r\n      <Calendar />\r\n    </section>\r\n  );\r\n};\r\n\r\nLocation.propTypes = { locationData: PropTypes.string.isRequired };\r\n","import React from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./Temperature.scss\";\r\n\r\nimport { UNITS_TYPE } from \"data/constants\";\r\n\r\nexport const Temperature = ({ tempValue, unitsType }) => {\r\n  const modifier = `temperature--is-${\r\n    unitsType === UNITS_TYPE.METRIC ? \"celsius\" : \"fahrenheit\"\r\n  }`;\r\n\r\n  return <h3 className={`temperature ${modifier}`}>{tempValue}</h3>;\r\n};\r\n\r\nTemperature.propTypes = {\r\n  tempValue: PropTypes.number.isRequired,\r\n  unitsType: PropTypes.string.isRequired,\r\n};\r\n","import React, { useRef } from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./UnitsSwitch.scss\";\r\n\r\nimport { UNITS_TYPE } from \"data/constants\";\r\n\r\nexport const UnitsSwitch = ({ onUnitsChange, unitsType }) => {\r\n  const coverPrefix = useRef(\"units-switch__cover\");\r\n  const unitInfoPrefix = useRef(\"units-switch__unit-info\");\r\n\r\n  const coverClassName = `${coverPrefix.current} ${\r\n    coverPrefix.current\r\n  }--is-${unitsType.toLowerCase()}`;\r\n\r\n  const setUnitInfoClassName = (typeName) =>\r\n    unitsType === typeName\r\n      ? `${unitInfoPrefix.current} ${unitInfoPrefix.current}--is-active`\r\n      : unitInfoPrefix.current;\r\n\r\n  const switchValues = [UNITS_TYPE.METRIC, UNITS_TYPE.IMPERIAL].map(\r\n    (unitType, index) => (\r\n      <p key={index} className={setUnitInfoClassName(unitType)}>\r\n        {unitType.toLowerCase()}\r\n      </p>\r\n    )\r\n  );\r\n\r\n  return (\r\n    <div className=\"units-switch\" onClick={onUnitsChange}>\r\n      <div className={coverClassName}></div>\r\n      {switchValues}\r\n    </div>\r\n  );\r\n};\r\n\r\nUnitsSwitch.propTypes = {\r\n  onUnitsChange: PropTypes.func.isRequired,\r\n  unitsType: PropTypes.string.isRequired,\r\n};\r\n","import React, { useContext } from \"react\";\r\n\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport \"./WeatherBackground.scss\";\r\n\r\nimport { WeatherContext } from \"data/context\";\r\nimport { WEATHER_ICON_TO_CLASS_MAP } from \"data/constants\";\r\n\r\nexport const WeatherBackground = ({ children }) => {\r\n  const {\r\n    state: {\r\n      weatherData: {\r\n        description: { icon },\r\n      },\r\n    },\r\n  } = useContext(WeatherContext);\r\n\r\n  const classType = WEATHER_ICON_TO_CLASS_MAP[icon];\r\n\r\n  const className = classType\r\n    ? `weather-background weather-background--${classType}`\r\n    : \"weather-background\";\r\n  return (\r\n    <div className={className}>\r\n      <div className=\"weather-background__glass-pane\">{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nWeatherBackground.propTypes = { children: PropTypes.element.isRequired };\r\n","import React, { useContext, useEffect } from \"react\";\r\n\r\nimport \"./WeatherEngine.scss\";\r\n\r\nimport { useHeartBeat } from \"hooks\";\r\nimport { WeatherScreen, LoadingScreen, ErrorScreen } from \"components\";\r\n\r\nimport { WeatherContext } from \"data/context\";\r\n\r\nexport const WeatherEngine = () => {\r\n  const {\r\n    state: { isLoading, error, success },\r\n    actions: { getWeatherData },\r\n  } = useContext(WeatherContext);\r\n\r\n  useEffect(() => {\r\n    getWeatherData();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useHeartBeat(15, getWeatherData);\r\n\r\n  let content = <LoadingScreen message={\"Getting user coordinates...\"} />;\r\n\r\n  if (isLoading) {\r\n    content = <LoadingScreen />;\r\n  } else if (error) {\r\n    content = <ErrorScreen error={error.toString()} />;\r\n  } else if (success) {\r\n    content = <WeatherScreen />;\r\n  }\r\n\r\n  return <div className=\"weather-engine\">{content}</div>;\r\n};\r\n","import { useCallback, useMemo, useEffect } from \"react\";\r\n\r\nexport const useHeartBeat = (intervalValue, action) => {\r\n  const setHeartBeatValue = useCallback((intervalValue) => {\r\n    if (typeof intervalValue === \"number\" && intervalValue > 0) {\r\n      return intervalValue * 60 * 1000;\r\n    } else {\r\n      throw new Error(`HeartBeat value must be a number greater than zero!`);\r\n    }\r\n  }, []);\r\n\r\n  const timeInterval = useMemo(() => {\r\n    return setHeartBeatValue(intervalValue);\r\n  }, [intervalValue, setHeartBeatValue]);\r\n\r\n  useEffect(() => {\r\n    if (!action || typeof action !== \"function\") {\r\n      throw new Error(\r\n        `Action type provided for the HeartBeat must be a function!`\r\n      );\r\n    }\r\n    const intervalId = setInterval(() => {\r\n      action();\r\n    }, timeInterval);\r\n\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n  }, [timeInterval, action]);\r\n};\r\n","import React, { useContext } from \"react\";\r\n\r\nimport \"./WeatherInfo.scss\";\r\n\r\nimport {\r\n  UnitsSwitch,\r\n  Location,\r\n  Temperature,\r\n  Description,\r\n  Details,\r\n} from \"components\";\r\nimport { WeatherContext } from \"data/context\";\r\n\r\nexport const WeatherInfo = () => {\r\n  const {\r\n    state: { weatherData, unitsType },\r\n    actions: { switchUnitsType },\r\n  } = useContext(WeatherContext);\r\n\r\n  const { description, details, location, temp } = weatherData;\r\n\r\n  return (\r\n    <div className=\"weather-info\">\r\n      <UnitsSwitch onUnitsChange={switchUnitsType} unitsType={unitsType} />\r\n      <Location locationData={location} />\r\n      <Temperature tempValue={temp} unitsType={unitsType} />\r\n      <Description descData={description} />\r\n      <Details detailsData={details} unitsType={unitsType} />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./WeatherScreen.scss\";\r\n\r\nimport { WeatherBackground, WeatherInfo } from \"components\";\r\n\r\nexport const WeatherScreen = () => {\r\n  const content = (\r\n    <div className=\"weather-screen\">\r\n      <WeatherBackground>\r\n        <WeatherInfo />\r\n      </WeatherBackground>\r\n    </div>\r\n  );\r\n\r\n  return content;\r\n};\r\n","import React from \"react\";\r\n\r\nimport { ErrorScreen } from \"components\";\r\n\r\nclass ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { error: null, errorInfo: null };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    this.setState({ error, errorInfo });\r\n  }\r\n\r\n  render() {\r\n    const { error, errorInfo } = this.state;\r\n\r\n    if (error) {\r\n      return (\r\n        <ErrorScreen\r\n          error={`${error.toString()} - ${errorInfo.componentStack}`}\r\n        />\r\n      );\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React from \"react\";\n\nimport \"./App.scss\";\n\nimport { WeatherProvider } from \"data/context\";\nimport { WeatherEngine, Footer, ErrorBoundary } from \"components\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ErrorBoundary>\n        <WeatherProvider>\n          <WeatherEngine />\n        </WeatherProvider>\n      </ErrorBoundary>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}