{"version":3,"sources":["hooks/useWeatherService.js","contexts/WeatherContext.js","components/WeatherBackground.js","contexts/UnitsContext.js","components/UnitsSwitch.js","components/Calendar.js","components/Location.js","components/Temperature.js","components/Description.js","components/Details.js","components/WeatherInfo.js","components/WeatherScreen.js","components/LoadingScreen.js","components/ErrorScreen.js","components/WeatherEngine.js","components/Footer.js","components/App.js","serviceWorker.js","index.js"],"names":["ServiceState","FETCH_INIT","FETCH_SUCCESS","FETCH_ERROR","GEOLOCATION_ERROR","reducerFunction","state","action","type","payload","isLoading","weatherData","error","Error","useWeatherService","deps","API","useRef","TOKEN","useReducer","dispatch","useEffect","onGetCoords","onError","aborController","AbortController","signal","getData","a","lat","lon","URL","current","fetch","result","ok","json","data","trimCoord","coord","parseFloat","toFixed","position","coords","latitude","longitude","extractCoords","msg","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","UNKNOWN_ERROR","navigator","geolocation","getCurrentPosition","alert","abort","WeatherContext","createContext","WeatherBackground","children","icon","useContext","weather","classType","className","UnitContext","UnitsSwitch","handleUnitsChange","unitsType","UnitsContext","coverPrefix","unitInfoPrefix","coverClassName","toLowerCase","setUnitInfoClassName","typeName","onClick","Calendar","currentDate","Date","toLocaleDateString","getLocalTime","useCallback","toLocaleTimeString","useState","currentTime","setCurrentTime","interval","setInterval","clearInterval","Location","name","sys","country","Temperature","temp","main","tempValue","modifier","Description","weatherIconToClassMap","description","Details","wind","units","details","category","title","value","speed","pressure","humidity","map","item","index","key","render","WeatherInfo","setUnitsType","Provider","WeatherScreen","LoadingScreen","message","ErrorScreen","WeatherEngine","setTimeIntervalValue","nbrOfMinutes","timeInterval","stateSwitch","setStateSwitch","updateStateSwitch","intervalId","content","Footer","text","linkRef","linkText","href","target","App","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2595996f.chunk.js","sourcesContent":["import { useEffect, useReducer, useRef } from \"react\";\r\n\r\nclass ServiceState {\r\n  static FETCH_INIT = \"FETCH_INIT\";\r\n  static FETCH_SUCCESS = \"FETCH_SUCCESS\";\r\n  static FETCH_ERROR = \"FETCH_ERROR\";\r\n  static GEOLOCATION_ERROR = \"GEOLOCATION_ERROR\";\r\n}\r\n\r\nconst reducerFunction = (state, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case ServiceState.FETCH_INIT:\r\n      return { ...state, isLoading: true };\r\n    case ServiceState.FETCH_SUCCESS:\r\n      return { ...state, isLoading: false, weatherData: payload, error: null };\r\n    case ServiceState.FETCH_ERROR:\r\n    case ServiceState.GEOLOCATION_ERROR:\r\n      return { ...state, isLoading: false, weatherData: null, error: payload };\r\n    default:\r\n      throw new Error(`Unknown Service State: ${type}`);\r\n  }\r\n};\r\n\r\nconst useWeatherService = deps => {\r\n  const API = useRef(\"https://api.openweathermap.org/data/2.5/weather\");\r\n  const TOKEN = useRef(\"086370e96396a4464fe97ec16a0f7381\");\r\n\r\n  const [state, dispatch] = useReducer(reducerFunction, {\r\n    isLoading: false,\r\n    weatherData: null,\r\n    error: null\r\n  });\r\n\r\n  useEffect(() => {\r\n    const getCoords = (onGetCoords, onError) => {\r\n      if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition(onGetCoords, onError);\r\n      } else {\r\n        alert(\"Geolocation is not supported by this browser.\");\r\n      }\r\n    };\r\n\r\n    const aborController = new AbortController();\r\n    const signal = aborController.signal;\r\n\r\n    const getData = async ({ lat, lon }) => {\r\n      const URL = `${API.current}?lat=${lat}&lon=${lon}&units=metric&APPID=${TOKEN.current}`;\r\n\r\n      try {\r\n        dispatch({ type: ServiceState.FETCH_INIT });\r\n        const result = await fetch(URL, { signal });\r\n\r\n        if (result.ok) {\r\n          const data = await result.json();\r\n          dispatch({ type: ServiceState.FETCH_SUCCESS, payload: data });\r\n        } else {\r\n          const error = await result.json();\r\n          dispatch({ type: ServiceState.FETCH_ERROR, payload: error });\r\n        }\r\n      } catch (error) {\r\n        dispatch({ type: ServiceState.FETCH_ERROR, payload: error });\r\n      }\r\n    };\r\n\r\n    const trimCoord = coord => (coord ? parseFloat(coord.toFixed(2)) : 0.0);\r\n\r\n    const extractCoords = position => {\r\n      let result = { lat: 0.0, lon: 0.0 };\r\n\r\n      if (position) {\r\n        const { latitude, longitude } = position.coords;\r\n\r\n        result = {\r\n          lat: trimCoord(latitude),\r\n          lon: trimCoord(longitude)\r\n        };\r\n      }\r\n\r\n      return result;\r\n    };\r\n\r\n    const handleGetCoords = position => {\r\n      getData({ ...extractCoords(position) });\r\n    };\r\n\r\n    const handleError = error => {\r\n      let msg = \"An unknown Geolocation related error occurred.\";\r\n\r\n      switch (error.code) {\r\n        case error.PERMISSION_DENIED:\r\n          msg = \"User denied the request for Geolocation.\";\r\n          break;\r\n        case error.POSITION_UNAVAILABLE:\r\n          msg = \"Location information is unavailable.\";\r\n          break;\r\n        case error.TIMEOUT:\r\n          msg = \"The request to get user location timed out.\";\r\n          break;\r\n        case error.UNKNOWN_ERROR:\r\n        default:\r\n          break;\r\n      }\r\n\r\n      dispatch({ type: ServiceState.GEOLOCATION_ERROR, payload: msg });\r\n    };\r\n\r\n    getCoords(handleGetCoords, handleError);\r\n\r\n    return () => aborController.abort();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, deps);\r\n\r\n  return state;\r\n};\r\n\r\nexport default useWeatherService;\r\n","import { createContext } from \"react\";\r\n\r\nconst WeatherContext = createContext(null);\r\n\r\nexport default WeatherContext;\r\n","import React, { useContext, useRef } from \"react\";\r\n\r\nimport \"./WeatherBackground.scss\";\r\n\r\nimport WeatherContext from \"../contexts/WeatherContext\";\r\n\r\nconst WeatherBackground = ({ children }) => {\r\n  const [{ icon }] = useContext(WeatherContext).weather;\r\n\r\n  const weatherIconToClassMap = useRef({\r\n    \"01d\": \"clear-sky-d\",\r\n    \"01n\": \"clear-sky-n\",\r\n    \"02d\": \"few-clouds-d\",\r\n    \"02n\": \"few-clouds-n\",\r\n    \"03d\": \"scattered-clouds-d\",\r\n    \"03n\": \"scattered-clouds-n\",\r\n    \"04d\": \"broken-clouds-d\",\r\n    \"04n\": \"broken-clouds-n\",\r\n    \"09d\": \"shower-rain-d\",\r\n    \"09n\": \"shower-rain-n\",\r\n    \"10d\": \"rain-d\",\r\n    \"10n\": \"rain-n\",\r\n    \"11d\": \"thunderstorm-d\",\r\n    \"11n\": \"thunderstorm-n\",\r\n    \"13d\": \"snow-d\",\r\n    \"13n\": \"snow-n\",\r\n    \"50d\": \"mist\"\r\n  });\r\n\r\n  const classType = weatherIconToClassMap.current[icon];\r\n\r\n  const className = classType\r\n    ? `weather-background weather-background--${classType}`\r\n    : \"weather-background\";\r\n  return (\r\n    <div className={className}>\r\n      <div className=\"weather-background__glass-pane\">{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherBackground;\r\n","import { createContext } from \"react\";\r\n\r\nconst UnitContext = createContext(null);\r\n\r\nexport default UnitContext;\r\n","import React, { useContext, useRef } from \"react\";\r\n\r\nimport \"./UnitsSwitch.scss\";\r\n\r\nimport UnitsContext from \"../contexts/UnitsContext\";\r\n\r\nconst UnitsSwitch = ({ handleUnitsChange }) => {\r\n  const unitsType = useContext(UnitsContext);\r\n  const coverPrefix = useRef(\"units-switch__cover\");\r\n  const unitInfoPrefix = useRef(\"units-switch__unit-info\");\r\n\r\n  const coverClassName = `${coverPrefix.current} ${\r\n    coverPrefix.current\r\n  }--is-${unitsType.toLowerCase()}`;\r\n\r\n  const setUnitInfoClassName = typeName =>\r\n    unitsType === typeName\r\n      ? `${unitInfoPrefix.current} ${unitInfoPrefix.current}--is-active`\r\n      : unitInfoPrefix.current;\r\n\r\n  return (\r\n    <div className=\"units-switch\" onClick={handleUnitsChange}>\r\n      <div className={coverClassName}></div>\r\n      <p className={setUnitInfoClassName(\"METRIC\")}>metric</p>\r\n      <p className={setUnitInfoClassName(\"IMPERIAL\")}>imperial</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UnitsSwitch;\r\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\r\n\r\nimport \"./Calendar.scss\";\r\n\r\nconst Calendar = () => {\r\n  const currentDate = useRef(new Date().toLocaleDateString());\r\n  const getLocalTime = useCallback(() => new Date().toLocaleTimeString(), []);\r\n  const [currentTime, setCurrentTime] = useState(() => getLocalTime());\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrentTime(getLocalTime());\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"calendar\">\r\n      <span className=\"calendar__time\">{currentTime}</span>\r\n      <span className=\"calendar__date\"> - {currentDate.current}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport \"./Location.scss\";\r\n\r\nimport Calendar from \"./Calendar\";\r\n\r\nimport WeatherContext from \"../contexts/WeatherContext\";\r\n\r\nconst Location = () => {\r\n  const { name, sys } = useContext(WeatherContext);\r\n\r\n  return (\r\n    <section className=\"location\">\r\n      <div className=\"location__city\">{`${name}, ${sys.country}`}</div>\r\n      <Calendar />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Location;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport \"./Temperature.scss\";\r\n\r\nimport WeatherContext from \"../contexts/WeatherContext\";\r\nimport UnitsContext from \"../contexts/UnitsContext\";\r\n\r\nconst Temperature = () => {\r\n  const { temp } = useContext(WeatherContext).main;\r\n  const unitsType = useContext(UnitsContext);\r\n\r\n  const tempValue =\r\n    unitsType === \"METRIC\" ? temp.toFixed(1) : (temp * 1.8 + 32.0).toFixed(1);\r\n\r\n  const modifier = `temperature--is-${\r\n    unitsType === \"METRIC\" ? \"celsius\" : \"fahrenheit\"\r\n  }`;\r\n\r\n  return <h3 className={`temperature ${modifier}`}>{tempValue}</h3>;\r\n};\r\n\r\nexport default Temperature;\r\n","import React, { useContext, useRef } from \"react\";\r\n\r\nimport \"./Description.scss\";\r\nimport WeatherContext from \"../contexts/WeatherContext\";\r\n\r\nconst Description = () => {\r\n  const weatherIconToClassMap = useRef({\r\n    \"01d\": \"clear-sky-d\",\r\n    \"01n\": \"clear-sky-n\",\r\n    \"02d\": \"few-clouds-d\",\r\n    \"02n\": \"few-clouds-n\",\r\n    \"03d\": \"scattered-clouds-d\",\r\n    \"03n\": \"scattered-clouds-n\",\r\n    \"04d\": \"broken-clouds-d\",\r\n    \"04n\": \"broken-clouds-n\",\r\n    \"09d\": \"shower-rain-d\",\r\n    \"09n\": \"shower-rain-n\",\r\n    \"10d\": \"rain-d\",\r\n    \"10n\": \"rain-n\",\r\n    \"11d\": \"thunderstorm-d\",\r\n    \"11n\": \"thunderstorm-n\",\r\n    \"13d\": \"snow-d\",\r\n    \"13n\": \"snow-n\",\r\n    \"50d\": \"mist\"\r\n  });\r\n\r\n  const [{ icon, description }] = useContext(WeatherContext).weather;\r\n\r\n  return (\r\n    <section className=\"description\">\r\n      <p\r\n        className={`description__icon description__icon--${weatherIconToClassMap.current[icon]}`}\r\n      ></p>\r\n      <p className=\"description__text\">{description}</p>\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Description;\r\n","import React, { useContext } from \"react\";\r\n\r\nimport \"./Details.scss\";\r\n\r\nimport WeatherContext from \"../contexts/WeatherContext\";\r\nimport UnitsContext from \"../contexts/UnitsContext\";\r\n\r\nconst Details = () => {\r\n  const { main, wind } = useContext(WeatherContext);\r\n  const units = useContext(UnitsContext);\r\n\r\n  const render = () => {\r\n    const data = [\r\n      {\r\n        category: \"wind\",\r\n        title: \"Wind speed\",\r\n        value:\r\n          units === \"METRIC\" ? wind.speed : (wind.speed * 2.237).toFixed(1),\r\n        units: units === \"METRIC\" ? \"m/s\" : \"mph\"\r\n      },\r\n      {\r\n        category: \"pressure\",\r\n        title: \"Air pressure\",\r\n        value: main.pressure,\r\n        units: \"hPa\"\r\n      },\r\n      {\r\n        category: \"humidity\",\r\n        title: \"Humidity\",\r\n        value: main.humidity,\r\n        units: \"%\"\r\n      }\r\n    ];\r\n\r\n    const details = data.map((item, index) => {\r\n      const { category, title, value, units } = item;\r\n\r\n      return (\r\n        <div key={index} className={`details__${category}`}>\r\n          <p className=\"details__title\">{title}</p>\r\n          <p className=\"details__value\">{`${value} ${units}`}</p>\r\n        </div>\r\n      );\r\n    });\r\n\r\n    return <section className=\"details\">{details}</section>;\r\n  };\r\n\r\n  return render();\r\n};\r\n\r\nexport default Details;\r\n","import React, { useState } from \"react\";\r\n\r\nimport \"./WeatherInfo.scss\";\r\n\r\nimport UnitsSwitch from \"./UnitsSwitch\";\r\nimport Location from \"./Location\";\r\nimport Temperature from \"./Temperature\";\r\nimport Description from \"./Description\";\r\nimport Details from \"./Details\";\r\n\r\nimport UnitsContext from \"../contexts/UnitsContext\";\r\n\r\nconst WeatherInfo = () => {\r\n  const [unitsType, setUnitsType] = useState(\"METRIC\");\r\n\r\n  const handleUnitsChange = () =>\r\n    unitsType === \"METRIC\" ? setUnitsType(\"IMPERIAL\") : setUnitsType(\"METRIC\");\r\n\r\n  return (\r\n    <div className=\"weather-info\">\r\n      <UnitsContext.Provider value={unitsType}>\r\n        <UnitsSwitch handleUnitsChange={handleUnitsChange} />\r\n        <Location />\r\n        <Temperature />\r\n        <Description />\r\n        <Details />\r\n      </UnitsContext.Provider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WeatherInfo;\r\n","import React from \"react\";\r\n\r\nimport \"./WeatherScreen.scss\";\r\n\r\nimport WeatherBackground from \"./WeatherBackground\";\r\nimport WeatherInfo from \"./WeatherInfo\";\r\n\r\nconst WeatherScreen = () => {\r\n  const content = (\r\n    <div className=\"weather-screen\">\r\n      <WeatherBackground>\r\n        <WeatherInfo />\r\n      </WeatherBackground>\r\n    </div>\r\n  );\r\n\r\n  return content;\r\n};\r\n\r\nexport default WeatherScreen;\r\n","import React from \"react\";\r\n\r\nimport \"./LoadingScreen.scss\";\r\n\r\nconst LoadingScreen = ({ message = \"Loading Local Weather Data...\" }) => {\r\n  return (\r\n    <div className=\"loading-screen\">\r\n      <h1 className=\"loading-screen__title\">{message}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingScreen;\r\n","import React from \"react\";\r\n\r\nimport \"./ErrorScreen.scss\";\r\n\r\nconst ErrorScreen = ({ error }) => {\r\n  return (\r\n    <div className=\"error-screen\">\r\n      <h1 className=\"error-screen__title\"> An error has occured: {error}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorScreen;\r\n","import React, { useState, useEffect, useCallback, useRef } from \"react\";\r\n\r\nimport \"./WeatherEngine.scss\";\r\n\r\nimport useWeatherService from \"../hooks/useWeatherService\";\r\nimport WeatherScreen from \"./WeatherScreen\";\r\nimport LoadingScreen from \"./LoadingScreen\";\r\nimport ErrorScreen from \"./ErrorScreen\";\r\n\r\nimport WeatherContext from \"../contexts/WeatherContext\";\r\n\r\nconst WeatherEngine = () => {\r\n  const setTimeIntervalValue = useCallback(nbrOfMinutes => {\r\n    if (typeof nbrOfMinutes === \"number\" && nbrOfMinutes > 0) {\r\n      return nbrOfMinutes * 60 * 1000;\r\n    } else {\r\n      throw new Error(`nbrOfMinutes must be a number greater than zero!`);\r\n    }\r\n  }, []);\r\n\r\n  const timeInterval = useRef(setTimeIntervalValue(15));\r\n  const [stateSwitch, setStateSwitch] = useState(false);\r\n\r\n  const updateStateSwitch = useCallback(() => {\r\n    setStateSwitch(stateSwitch ? false : true);\r\n  }, [stateSwitch]);\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      updateStateSwitch();\r\n    }, timeInterval.current);\r\n\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n  }, [updateStateSwitch]);\r\n\r\n  const { isLoading, weatherData, error } = useWeatherService([stateSwitch]);\r\n\r\n  let content = <LoadingScreen message={\"Getting user coordinates...\"} />;\r\n\r\n  if (isLoading) {\r\n    content = <LoadingScreen />;\r\n  } else if (error) {\r\n    content = <ErrorScreen error={error} />;\r\n  } else if (weatherData) {\r\n    content = (\r\n      <WeatherContext.Provider value={weatherData}>\r\n        <WeatherScreen />\r\n      </WeatherContext.Provider>\r\n    );\r\n  }\r\n\r\n  return <div className=\"weather-engine\">{content}</div>;\r\n};\r\n\r\nexport default WeatherEngine;\r\n","import React from \"react\";\r\n\r\nimport \"./Footer.scss\";\r\n\r\nconst Footer = () => {\r\n  const creditsInfo = [\r\n    {\r\n      text: \"Weather API:\",\r\n      linkRef: \"http://openweathermap.org\",\r\n      linkText: \"Open Weather Map\"\r\n    },\r\n    {\r\n      text: \"Weather Font:\",\r\n      linkRef: \"https://www.behance.net/artill\",\r\n      linkText: \"Lukas Bischoff\"\r\n    },\r\n    {\r\n      text: \"Weather images:\",\r\n      linkRef: \"https://www.flickr.com/photos/archikvadrat/\",\r\n      linkText: \"Anatol C.\"\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <footer className=\"footer\">\r\n      <section className=\"footer__copyright\">\r\n        Local Weather Application (Bart Krolak, 2020)\r\n      </section>\r\n      {creditsInfo.map(({ text, linkRef, linkText }, index) => {\r\n        return (\r\n          <section key={index} className=\"footer__credits\">\r\n            <span className=\"footer__text\">{text}</span>\r\n            <a className=\"footer__link\" href={linkRef} target=\"_blank\">\r\n              {linkText}\r\n            </a>\r\n          </section>\r\n        );\r\n      })}\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\n\nimport WeatherEngine from \"./WeatherEngine\";\nimport Footer from \"./Footer\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <WeatherEngine />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}