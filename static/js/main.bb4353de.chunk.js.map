{"version":3,"sources":["components/Calendar/Calendar.js","data/constants.js","components/Description/Description.js","components/Details/Details.js","components/ErrorScreen/ErrorScreen.js","components/Footer/Footer.js","components/LoadingScreen/LoadingScreen.js","components/Location/Location.js","components/Temperature/Temperature.js","components/UnitsSwitch/UnitsSwitch.js","data/context.js","components/WeatherBackground/WeatherBackground.js","utils/geolocation.js","utils/weather.js","data/reducer.js","hooks/useWeatherService.js","components/WeatherEngine/WeatherEngine.js","hooks/useHeartBeat.js","components/WeatherInfo/WeatherInfo.js","components/WeatherScreen/WeatherScreen.js","components/ErrorBoundary/ErrorBoundary.js","App.js","index.js"],"names":["Calendar","currentDate","useRef","Date","toLocaleDateString","getLocalTime","useCallback","toLocaleTimeString","useState","currentTime","setCurrentTime","useEffect","interval","setInterval","clearInterval","className","current","WEATHER_ICON_TO_CLASS_MAP","Object","freeze","UNITS_TYPE","METRIC","IMPERIAL","SERVICE_ACTION_TYPE","FETCH_INIT","FETCH_SUCCESS","FETCH_ERROR","GEOLOCATION_ERROR","SWITCH_UNITS_TYPE","Description","descData","icon","text","Details","detailsData","windSpeed","pressure","humidity","detailsStructure","category","title","value","units","unitsType","map","item","index","key","ErrorScreen","error","Footer","creditsInfo","linkRef","linkText","href","target","rel","LoadingScreen","message","Location","locationData","Temperature","tempValue","modifier","UnitsSwitch","onUnitsChange","coverPrefix","unitInfoPrefix","coverClassName","toLowerCase","switchValues","unitType","typeName","onClick","WeatherContext","createContext","WeatherBackground","children","useContext","weatherData","description","classType","trimCoord","coord","parseFloat","toFixed","trimNumericValue","normalizeWeatherData","Error","weather","main","temp","speed","wind","country","sys","name","location","details","convertWeatherDataValues","state","convertedTemperature","convertedWindSpeed","switchUnitsType","dispatch","type","payload","INITIAL_STATE","isLoading","weatherReducer","action","useWeatherService","deps","API","TOKEN","useReducer","onGetCoords","onError","aborController","AbortController","signal","getWeatherData","a","lat","lon","URL","fetch","result","ok","json","data","position","coords","latitude","longitude","extractCoords","msg","code","PERMISSION_DENIED","POSITION_UNAVAILABLE","TIMEOUT","UNKNOWN_ERROR","handleGeolocationError","navigator","geolocation","getCurrentPosition","alert","abort","WeatherEngine","heartBeat","nbrOfMinutes","setTimeIntervalValue","timeInterval","useMemo","setHeartBeat","intervalId","useHeartBeat","content","toString","Provider","WeatherInfo","WeatherScreen","ErrorBoundary","props","hasError","errorInfo","this","setState","componentStack","React","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb4353de.chunk.js","sourcesContent":["import React, { useState, useEffect, useCallback, useRef } from \"react\";\r\n\r\nimport \"./Calendar.scss\";\r\n\r\nexport const Calendar = () => {\r\n  const currentDate = useRef(new Date().toLocaleDateString());\r\n  const getLocalTime = useCallback(() => new Date().toLocaleTimeString(), []);\r\n  const [currentTime, setCurrentTime] = useState(() => getLocalTime());\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrentTime(getLocalTime());\r\n    }, 1000);\r\n\r\n    return () => clearInterval(interval);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"calendar\">\r\n      <span className=\"calendar__time\">{currentTime}</span>\r\n      <span className=\"calendar__date\"> - {currentDate.current}</span>\r\n    </div>\r\n  );\r\n};\r\n","export const WEATHER_ICON_TO_CLASS_MAP = Object.freeze({\r\n  \"01d\": \"clear-sky-d\",\r\n  \"01n\": \"clear-sky-n\",\r\n  \"02d\": \"few-clouds-d\",\r\n  \"02n\": \"few-clouds-n\",\r\n  \"03d\": \"scattered-clouds-d\",\r\n  \"03n\": \"scattered-clouds-n\",\r\n  \"04d\": \"broken-clouds-d\",\r\n  \"04n\": \"broken-clouds-n\",\r\n  \"09d\": \"shower-rain-d\",\r\n  \"09n\": \"shower-rain-n\",\r\n  \"10d\": \"rain-d\",\r\n  \"10n\": \"rain-n\",\r\n  \"11d\": \"thunderstorm-d\",\r\n  \"11n\": \"thunderstorm-n\",\r\n  \"13d\": \"snow-d\",\r\n  \"13n\": \"snow-n\",\r\n  \"50d\": \"mist\",\r\n});\r\n\r\nconst METRIC = \"METRIC\";\r\nconst IMPERIAL = \"IMPERIAL\";\r\n\r\nexport const UNITS_TYPE = Object.freeze({\r\n  METRIC,\r\n  IMPERIAL,\r\n});\r\n\r\nexport const SERVICE_ACTION_TYPE = Object.freeze({\r\n  FETCH_INIT: \"FETCH_INIT\",\r\n  FETCH_SUCCESS: \"FETCH_SUCCESS\",\r\n  FETCH_ERROR: \"FETCH_ERROR\",\r\n  GEOLOCATION_ERROR: \"GEOLOCATION_ERROR\",\r\n  SWITCH_UNITS_TYPE: \"SWITCH_UNITS_TYPE\",\r\n});\r\n","import React from \"react\";\r\n\r\nimport \"./Description.scss\";\r\n\r\nimport { WEATHER_ICON_TO_CLASS_MAP } from \"data/constants\";\r\n\r\nexport const Description = ({ descData: { icon, text } }) => {\r\n  return (\r\n    <section className=\"description\">\r\n      <p\r\n        className={`description__icon description__icon--${WEATHER_ICON_TO_CLASS_MAP[icon]}`}\r\n      ></p>\r\n      <p className=\"description__text\">{text}</p>\r\n    </section>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./Details.scss\";\r\n\r\nimport { UNITS_TYPE } from \"data/constants\";\r\n\r\nexport const Details = ({\r\n  detailsData: { windSpeed, pressure, humidity },\r\n  unitsType,\r\n}) => {\r\n  const data = [\r\n    {\r\n      category: \"wind\",\r\n      title: \"Wind speed\",\r\n      value: windSpeed,\r\n      units: unitsType === UNITS_TYPE.METRIC ? \"m/s\" : \"mph\",\r\n    },\r\n    {\r\n      category: \"pressure\",\r\n      title: \"Air pressure\",\r\n      value: pressure,\r\n      units: \"hPa\",\r\n    },\r\n    {\r\n      category: \"humidity\",\r\n      title: \"Humidity\",\r\n      value: humidity,\r\n      units: \"%\",\r\n    },\r\n  ];\r\n\r\n  const detailsStructure = data.map((item, index) => {\r\n    const { category, title, value, units } = item;\r\n\r\n    return (\r\n      <div key={index} className={`details__${category}`}>\r\n        <p className=\"details__title\">{title}</p>\r\n        <p className=\"details__value\">{`${value} ${units}`}</p>\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return <section className=\"details\">{detailsStructure}</section>;\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./ErrorScreen.scss\";\r\n\r\nexport const ErrorScreen = ({ error }) => {\r\n  return (\r\n    <div className=\"error-screen\">\r\n      <h1 className=\"error-screen__title\">An error has occured.</h1>\r\n      <p className=\"error-screen__details\">{error}</p>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useRef } from \"react\";\r\n\r\nimport \"./Footer.scss\";\r\n\r\nexport const Footer = () => {\r\n  const creditsInfo = useRef([\r\n    {\r\n      text: \"Weather API:\",\r\n      linkRef: \"http://openweathermap.org\",\r\n      linkText: \"Open Weather Map\",\r\n    },\r\n    {\r\n      text: \"Weather Font:\",\r\n      linkRef: \"https://www.behance.net/artill\",\r\n      linkText: \"Lukas Bischoff\",\r\n    },\r\n    {\r\n      text: \"Weather images:\",\r\n      linkRef: \"https://www.flickr.com/photos/archikvadrat/\",\r\n      linkText: \"Anatol C.\",\r\n    },\r\n  ]);\r\n\r\n  return (\r\n    <footer className=\"footer\">\r\n      <section className=\"footer__copyright\">\r\n        Local Weather Application (Bart Krolak, 2020)\r\n      </section>\r\n      {creditsInfo.current.map(({ text, linkRef, linkText }, index) => {\r\n        return (\r\n          <section key={index} className=\"footer__credits\">\r\n            <span className=\"footer__text\">{text}</span>\r\n            <a\r\n              className=\"footer__link\"\r\n              href={linkRef}\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              {linkText}\r\n            </a>\r\n          </section>\r\n        );\r\n      })}\r\n    </footer>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./LoadingScreen.scss\";\r\n\r\nexport const LoadingScreen = ({\r\n  message = \"Loading Local Weather Data...\",\r\n}) => {\r\n  return (\r\n    <div className=\"loading-screen\">\r\n      <h1 className=\"loading-screen__title\">{message}</h1>\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./Location.scss\";\r\n\r\nimport { Calendar } from \"components\";\r\n\r\nexport const Location = ({ locationData }) => {\r\n  return (\r\n    <section className=\"location\">\r\n      <div className=\"location__city\">{locationData}</div>\r\n      <Calendar />\r\n    </section>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./Temperature.scss\";\r\n\r\nimport { UNITS_TYPE } from \"data/constants\";\r\n\r\nexport const Temperature = ({ tempValue, unitsType }) => {\r\n  const modifier = `temperature--is-${\r\n    unitsType === UNITS_TYPE.METRIC ? \"celsius\" : \"fahrenheit\"\r\n  }`;\r\n\r\n  return <h3 className={`temperature ${modifier}`}>{tempValue}</h3>;\r\n};\r\n","import React, { useRef } from \"react\";\r\n\r\nimport \"./UnitsSwitch.scss\";\r\nimport { UNITS_TYPE } from \"data/constants\";\r\n\r\nexport const UnitsSwitch = ({ onUnitsChange, unitsType }) => {\r\n  const coverPrefix = useRef(\"units-switch__cover\");\r\n  const unitInfoPrefix = useRef(\"units-switch__unit-info\");\r\n\r\n  const coverClassName = `${coverPrefix.current} ${\r\n    coverPrefix.current\r\n  }--is-${unitsType.toLowerCase()}`;\r\n\r\n  const setUnitInfoClassName = (typeName) =>\r\n    unitsType === typeName\r\n      ? `${unitInfoPrefix.current} ${unitInfoPrefix.current}--is-active`\r\n      : unitInfoPrefix.current;\r\n\r\n  const switchValues = [UNITS_TYPE.METRIC, UNITS_TYPE.IMPERIAL].map(\r\n    (unitType, index) => (\r\n      <p key={index} className={setUnitInfoClassName(unitType)}>\r\n        {unitType.toLowerCase()}\r\n      </p>\r\n    )\r\n  );\r\n\r\n  return (\r\n    <div className=\"units-switch\" onClick={onUnitsChange}>\r\n      <div className={coverClassName}></div>\r\n      {switchValues}\r\n    </div>\r\n  );\r\n};\r\n","import { createContext } from \"react\";\r\n\r\nexport const WeatherContext = createContext(null);\r\n","import React, { useContext } from \"react\";\r\n\r\nimport \"./WeatherBackground.scss\";\r\n\r\nimport { WeatherContext } from \"data/context\";\r\nimport { WEATHER_ICON_TO_CLASS_MAP } from \"data/constants\";\r\n\r\nexport const WeatherBackground = ({ children }) => {\r\n  const {\r\n    weatherData: {\r\n      description: { icon },\r\n    },\r\n  } = useContext(WeatherContext);\r\n\r\n  const classType = WEATHER_ICON_TO_CLASS_MAP[icon];\r\n\r\n  const className = classType\r\n    ? `weather-background weather-background--${classType}`\r\n    : \"weather-background\";\r\n  return (\r\n    <div className={className}>\r\n      <div className=\"weather-background__glass-pane\">{children}</div>\r\n    </div>\r\n  );\r\n};\r\n","import { SERVICE_ACTION_TYPE } from \"data/constants\";\r\n\r\nexport const getCoords = (onGetCoords, onError) => {\r\n  if (navigator.geolocation) {\r\n    navigator.geolocation.getCurrentPosition(onGetCoords, onError);\r\n  } else {\r\n    alert(\"Geolocation is not supported by this browser.\");\r\n  }\r\n};\r\n\r\nconst trimCoord = (coord) => (coord ? parseFloat(coord.toFixed(2)) : 0.0);\r\n\r\nexport const extractCoords = (position) => {\r\n  let result = { lat: 0.0, lon: 0.0 };\r\n\r\n  if (position) {\r\n    const { latitude, longitude } = position.coords;\r\n\r\n    result = {\r\n      lat: trimCoord(latitude),\r\n      lon: trimCoord(longitude),\r\n    };\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nexport const handleGeolocationError = (error, dispatch) => {\r\n  let msg = \"An unknown Geolocation related error occurred.\";\r\n\r\n  switch (error.code) {\r\n    case error.PERMISSION_DENIED:\r\n      msg = \"User denied the request for Geolocation.\";\r\n      break;\r\n    case error.POSITION_UNAVAILABLE:\r\n      msg = \"Location information is unavailable.\";\r\n      break;\r\n    case error.TIMEOUT:\r\n      msg = \"The request to get user location timed out.\";\r\n      break;\r\n    case error.UNKNOWN_ERROR:\r\n    default:\r\n      break;\r\n  }\r\n\r\n  dispatch({ type: SERVICE_ACTION_TYPE.GEOLOCATION_ERROR, payload: msg });\r\n};\r\n","import { UNITS_TYPE, SERVICE_ACTION_TYPE } from \"data/constants\";\r\n\r\nconst trimNumericValue = (value) => parseFloat(value.toFixed(1));\r\n\r\nexport const normalizeWeatherData = (weatherData) => {\r\n  if (!weatherData || typeof weatherData !== \"object\") {\r\n    throw new Error(\"Improper type of weather data!\");\r\n  }\r\n\r\n  const {\r\n    coord,\r\n    weather: [{ description, icon }],\r\n    main: { temp, pressure, humidity },\r\n    wind: { speed },\r\n    sys: { country },\r\n    name,\r\n  } = weatherData;\r\n\r\n  return {\r\n    coord,\r\n    location: `${name}, ${country}`,\r\n    temp: trimNumericValue(temp),\r\n    description: {\r\n      text: description,\r\n      icon,\r\n    },\r\n    details: {\r\n      windSpeed: trimNumericValue(speed),\r\n      pressure,\r\n      humidity,\r\n    },\r\n  };\r\n};\r\n\r\nexport const convertWeatherDataValues = (unitsType, state) => {\r\n  const { weatherData } = state;\r\n  const {\r\n    details: { windSpeed },\r\n    temp,\r\n  } = weatherData;\r\n\r\n  const convertedTemperature = trimNumericValue(\r\n    unitsType === UNITS_TYPE.METRIC ? ((temp - 32) * 5) / 9 : temp * 1.8 + 32.0\r\n  );\r\n\r\n  const convertedWindSpeed = trimNumericValue(\r\n    unitsType === UNITS_TYPE.METRIC ? windSpeed * 0.447 : windSpeed * 2.237\r\n  );\r\n\r\n  return {\r\n    ...weatherData,\r\n    temp: convertedTemperature,\r\n    details: { ...weatherData.details, windSpeed: convertedWindSpeed },\r\n  };\r\n};\r\n\r\nexport const switchUnitsType = (state) => (dispatch) => {\r\n  return () =>\r\n    dispatch({\r\n      type: SERVICE_ACTION_TYPE.SWITCH_UNITS_TYPE,\r\n      payload:\r\n        state.unitsType === UNITS_TYPE.METRIC\r\n          ? UNITS_TYPE.IMPERIAL\r\n          : UNITS_TYPE.METRIC,\r\n    });\r\n};\r\n","import { SERVICE_ACTION_TYPE, UNITS_TYPE } from \"data/constants\";\r\nimport { convertWeatherDataValues } from \"utils/weather\";\r\n\r\nexport const INITIAL_STATE = {\r\n  isLoading: false,\r\n  weatherData: null,\r\n  error: null,\r\n  unitsType: UNITS_TYPE.METRIC,\r\n};\r\n\r\nconst {\r\n  FETCH_INIT,\r\n  FETCH_SUCCESS,\r\n  FETCH_ERROR,\r\n  GEOLOCATION_ERROR,\r\n  SWITCH_UNITS_TYPE,\r\n} = SERVICE_ACTION_TYPE;\r\n\r\nexport const weatherReducer = (state, action) => {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case FETCH_INIT:\r\n      return { ...state, isLoading: true };\r\n    case FETCH_SUCCESS:\r\n      return { ...state, isLoading: false, weatherData: payload, error: null };\r\n    case SWITCH_UNITS_TYPE:\r\n      return {\r\n        ...state,\r\n        unitsType: payload,\r\n        weatherData: convertWeatherDataValues(payload, state),\r\n      };\r\n    case FETCH_ERROR:\r\n    case GEOLOCATION_ERROR:\r\n      return { ...state, isLoading: false, weatherData: null, error: payload };\r\n    default:\r\n      throw new Error(`Unknown Service State: ${type}`);\r\n  }\r\n};\r\n","import { useEffect, useReducer, useRef } from \"react\";\r\n\r\nimport {\r\n  getCoords,\r\n  extractCoords,\r\n  handleGeolocationError,\r\n} from \"utils/geolocation\";\r\nimport { normalizeWeatherData, switchUnitsType } from \"utils/weather\";\r\n\r\nimport { SERVICE_ACTION_TYPE } from \"data/constants\";\r\nimport { weatherReducer, INITIAL_STATE } from \"data/reducer\";\r\n\r\nexport const useWeatherService = (deps) => {\r\n  const API = useRef(\"https://api.openweathermap.org/data/2.5/weather\");\r\n  const TOKEN = useRef(\"086370e96396a4464fe97ec16a0f7381\");\r\n\r\n  const [state, dispatch] = useReducer(weatherReducer, INITIAL_STATE);\r\n\r\n  useEffect(() => {\r\n    const aborController = new AbortController();\r\n    const signal = aborController.signal;\r\n\r\n    const getWeatherData = async ({ lat, lon }) => {\r\n      const URL = `${API.current}?lat=${lat}&lon=${lon}&units=metric&APPID=${TOKEN.current}`;\r\n\r\n      try {\r\n        dispatch({ type: SERVICE_ACTION_TYPE.FETCH_INIT });\r\n        const result = await fetch(URL, { signal });\r\n\r\n        if (result.ok) {\r\n          const data = await result.json();\r\n\r\n          dispatch({\r\n            type: SERVICE_ACTION_TYPE.FETCH_SUCCESS,\r\n            payload: normalizeWeatherData(data),\r\n          });\r\n        } else {\r\n          const error = await result.json();\r\n          dispatch({ type: SERVICE_ACTION_TYPE.FETCH_ERROR, payload: error });\r\n        }\r\n      } catch (error) {\r\n        dispatch({ type: SERVICE_ACTION_TYPE.FETCH_ERROR, payload: error });\r\n      }\r\n    };\r\n\r\n    getCoords(\r\n      (position) => {\r\n        getWeatherData({ ...extractCoords(position) });\r\n      },\r\n      (error) => handleGeolocationError(error, dispatch)\r\n    );\r\n\r\n    return () => aborController.abort();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, deps);\r\n\r\n  return { state, switchUnitsType: switchUnitsType(state)(dispatch) };\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./WeatherEngine.scss\";\r\n\r\nimport { useWeatherService, useHeartBeat } from \"hooks\";\r\nimport { WeatherScreen, LoadingScreen, ErrorScreen } from \"components\";\r\n\r\nimport { WeatherContext } from \"data/context\";\r\n\r\nexport const WeatherEngine = () => {\r\n  const heartBeat = useHeartBeat(15);\r\n\r\n  const { state, switchUnitsType } = useWeatherService([heartBeat]);\r\n  const { isLoading, error, weatherData, unitsType } = state;\r\n\r\n  let content = <LoadingScreen message={\"Getting user coordinates...\"} />;\r\n\r\n  if (isLoading) {\r\n    content = <LoadingScreen />;\r\n  } else if (error) {\r\n    content = <ErrorScreen error={error.toString()} />;\r\n  } else if (weatherData) {\r\n    content = (\r\n      <WeatherContext.Provider\r\n        value={{ weatherData, unitsType, switchUnitsType }}\r\n      >\r\n        <WeatherScreen />\r\n      </WeatherContext.Provider>\r\n    );\r\n  }\r\n\r\n  return <div className=\"weather-engine\">{content}</div>;\r\n};\r\n","import { useCallback, useMemo, useState, useEffect } from \"react\";\r\n\r\nexport const useHeartBeat = (nbrOfMinutes) => {\r\n  const setTimeIntervalValue = useCallback((nbrOfMinutes) => {\r\n    if (typeof nbrOfMinutes === \"number\" && nbrOfMinutes > 0) {\r\n      return nbrOfMinutes * 60 * 1000;\r\n    } else {\r\n      throw new Error(`nbrOfMinutes must be a number greater than zero!`);\r\n    }\r\n  }, []);\r\n\r\n  const timeInterval = useMemo(() => {\r\n    return setTimeIntervalValue(nbrOfMinutes);\r\n  }, [nbrOfMinutes, setTimeIntervalValue]);\r\n\r\n  const [heartBeat, setHeartBeat] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      setHeartBeat(!heartBeat);\r\n    }, timeInterval);\r\n\r\n    return () => {\r\n      clearInterval(intervalId);\r\n    };\r\n  }, [timeInterval, heartBeat]);\r\n\r\n  return heartBeat;\r\n};\r\n","import React, { useContext } from \"react\";\r\n\r\nimport \"./WeatherInfo.scss\";\r\n\r\nimport {\r\n  UnitsSwitch,\r\n  Location,\r\n  Temperature,\r\n  Description,\r\n  Details,\r\n} from \"components\";\r\nimport { WeatherContext } from \"data/context\";\r\n\r\nexport const WeatherInfo = () => {\r\n  const { weatherData, switchUnitsType, unitsType } = useContext(\r\n    WeatherContext\r\n  );\r\n\r\n  const { description, details, location, temp } = weatherData;\r\n\r\n  return (\r\n    <div className=\"weather-info\">\r\n      <UnitsSwitch onUnitsChange={switchUnitsType} unitsType={unitsType} />\r\n      <Location locationData={location} />\r\n      <Temperature tempValue={temp} unitsType={unitsType} />\r\n      <Description descData={description} />\r\n      <Details detailsData={details} unitsType={unitsType} />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./WeatherScreen.scss\";\r\n\r\nimport { WeatherBackground, WeatherInfo } from \"components\";\r\n\r\nexport const WeatherScreen = () => {\r\n  const content = (\r\n    <div className=\"weather-screen\">\r\n      <WeatherBackground>\r\n        <WeatherInfo />\r\n      </WeatherBackground>\r\n    </div>\r\n  );\r\n\r\n  return content;\r\n};\r\n","import React from \"react\";\r\n\r\nimport { ErrorScreen } from \"components\";\r\n\r\nclass ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { hasError: false, error: null, errorInfo: null };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    this.setState({ error, errorInfo });\r\n  }\r\n\r\n  render() {\r\n    const { error, errorInfo } = this.state;\r\n\r\n    if (error) {\r\n      return <ErrorScreen error={`${error} - ${errorInfo.componentStack}`} />;\r\n    }\r\n\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React from \"react\";\n\nimport \"./App.scss\";\n\nimport { WeatherEngine, Footer, ErrorBoundary } from \"components\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <ErrorBoundary>\n        <WeatherEngine />\n      </ErrorBoundary>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}